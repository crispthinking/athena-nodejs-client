{
  "name": "@crispthinking/athena-classifier-sdk",
  "version": "0.0.0",
  "main": "./dist/index.js",
  "description": "A Node.js SDK for the Athena classifier that uses gRPC transport.",
  "type": "module",
  "engines": {
    "node": ">= 22.11 < 23"
  },
  "files": [
    "dist/",
    "README.md",
    "LICENSE"
  ],
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.js"
    }
  },
  "devDependencies": {
    "@eslint/js": "~9.35",
    "@types/brotli": "^1.3.4",
    "@types/eslint__js": "~9.14",
    "@types/node": "~20",
    "@typescript-eslint/parser": "~8.44",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/eslint-plugin": "~1.1",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "~10.1",
    "globals": "~16.4",
    "grpc_tools_node_protoc": "^1.0.0",
    "grpc-tools": "^1.13.0",
    "prettier": "~3.6",
    "rimraf": "~6.0",
    "ts-api-utils": "~2.1",
    "ts-proto": "^2.7.7",
    "typed-emitter": "^2.1.0",
    "typedoc": "^0.28.12",
    "typescript": "~5.9",
    "typescript-eslint": "~8.44",
    "vitest": "^3.2.4"
  },
  "scripts": {
    "start": "node build/src/main.js",
    "clean": "rimraf coverage build tmp dist",
    "prebuild": "npm run lint",
    "build:documentation": "typedoc --readme ./README.md src/main.ts",
    "build": "tsc -p tsconfig.json",
    "build:watch": "tsc -w -p tsconfig.json",
    "build:release": "npm run clean && tsc -p tsconfig.release.json",
    "codegen": "mkdir -p src/generated && npx protoc --plugin=protoc-gen-ts_proto=./node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=src/generated --ts_proto_opt=esModuleInterop=true,importSuffix=.js,useExactTypes=false,outputServices=grpc-js --proto_path=./athena-protobufs ./athena-protobufs/athena/**.proto",
    "lint": "eslint .",
    "lint:all": "npm run lint && npm run prettier:check && npx tsc --noEmit",
    "precommit:setup": "echo 'To install pre-commit hooks, run: uv tool install pre-commit && uvx pre-commit install'",
    "test": "vitest run unit --config __tests__/vitest.config.ts",
    "test:unit": "vitest run unit --config __tests__/vitest.config.ts",
    "test:functional": "vitest run functional --config __tests__/vitest.functional.config.ts",
    "test:coverage": "vitest run unit --config __tests__/vitest.config.ts --coverage.enabled --coverage.all",
    "prettier": "prettier \"{src,__{tests}__}/**/*.{ts,mts}\" --config .prettierrc --write",
    "prettier:check": "prettier \"{src,__{tests}__}/**/*.{ts,mts}\" --config .prettierrc --check",
    "test:watch": "vitest unit",
    "test:functional:watch": "vitest functional --config __tests__/vitest.functional.config.ts",
    "test:help": "echo 'Available test commands:\n  npm run test:unit          - Run unit tests (fast, no external deps)\n  npm run test:functional     - Run functional tests (requires env vars)\n  npm run test:coverage       - Run unit tests with coverage\n  npm run test:watch          - Run unit tests in watch mode\n  npm run test:functional:watch - Run functional tests in watch mode\n\nFor functional tests, set these env vars:\n  VITE_ATHENA_CLIENT_ID, VITE_ATHENA_CLIENT_SECRET,\n  VITE_ATHENA_DEPLOYMENT_ID, VITE_ATHENA_AFFILIATE, VITE_OAUTH_ISSUER'"
  },
  "author": "James Abbott <abbottdev@users.noreply.github.com>",
  "license": "MIT",
  "dependencies": {
    "@bufbuild/protobuf": "^2.7.0",
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.8.0",
    "brotli": "^1.3.3",
    "jwt-decode": "^4.0.0",
    "openid-client": "^6.7.1",
    "protobufjs": "^7.5.4",
    "rxjs": "^7.8.2",
    "sharp": "^0.34.3",
    "tslib": "~2.8"
  },
  "volta": {
    "node": "22.12.0"
  }
}
